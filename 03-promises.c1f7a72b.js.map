{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAmEA,MAAMC,EAAW,CACfC,QAASC,SAASC,cAAc,S,UAOlC,UAAmBC,SAAEA,EAAQC,MAAEA,IAC7BC,EAAAR,GAASS,OAAOC,QAAQ,qBAAqBJ,QAAeC,M,WAG9D,UAAkBD,SAAEA,EAAQC,MAAEA,IAC5BC,EAAAR,GAASS,OAAOE,QAAQ,oBAAoBL,QAAeC,M,GAR7D,IAtEA,MASEK,OACEC,KAAKC,c,CAEPA,eACED,KAAKV,QAAQY,iBAAiB,SAAUF,KAAKG,aAAaC,KAAKJ,M,CAEjEG,aAAaE,GACXA,EAAMC,iBAEN,MACEC,UAAUb,MAAEA,EAAKc,KAAEA,EAAIC,OAAEA,IACvBJ,EAAMK,cACJC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOJ,EAAKK,OACxBE,EAAcH,OAAOH,EAAOI,OAElCG,YAAW,KACThB,KAAKiB,UAAYN,EACjBX,KAAKkB,oBAELlB,KAAKmB,WAAaC,aAAY,KAC5BpB,KAAKP,UAAY,EACjBO,KAAKiB,UAAYH,EAEbd,KAAKP,SAAWsB,EAClBf,KAAKqB,QAELrB,KAAKkB,mBAAmB,GAEzBJ,EAAU,GACZH,E,CAELO,oBACElB,KAAKsB,cAActB,KAAKP,SAAUO,KAAKiB,UACpCM,KAAKvB,KAAKwB,UAAUpB,KAAKJ,OACzByB,MAAMzB,KAAK0B,SAAStB,KAAKJ,M,CAE9BsB,cAAc7B,EAAUC,GACtB,OAAO,IAAIiC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAGpCH,EAAQ,C,SAAEnC,E,MAAUC,IAEpBmC,EAAO,C,SAAEpC,E,MAAUC,GAAQ,G,CAIjC2B,QACEW,cAAchC,KAAKmB,YACnBnB,KAAKmB,WAAa,KAClBnB,KAAKiB,SAAW,EAChBjB,KAAKP,SAAW,C,CA5DlBwC,aAAY3C,QAAEA,EAASkC,UAAAU,EAAWR,SAAAS,IAChCnC,KAAKV,QAAUA,EACfU,KAAKwB,UAAYU,EACjBlC,KAAK0B,SAAWS,EAChBnC,KAAKmB,WAAa,KAClBnB,KAAKiB,SAAW,EAChBjB,KAAKP,SAAW,C,GA+DNJ,GAAUU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nclass Generator {\n  constructor({ formRef, onResolve, onReject }) {\n    this.formRef = formRef;\n    this.onResolve = onResolve;\n    this.onReject = onReject;\n    this.intervalId = null;\n    this.sumDelay = 0;\n    this.position = 1;\n  }\n  init() {\n    this.addListeners();\n  }\n  addListeners() {\n    this.formRef.addEventListener('submit', this.onSubmitForm.bind(this));\n  }\n  onSubmitForm(event) {\n    event.preventDefault();\n\n    const {\n      elements: { delay, step, amount },\n    } = event.currentTarget;\n    const firstDelay = Number(delay.value);\n    const stepDelay = Number(step.value);\n    const amountValue = Number(amount.value);\n\n    setTimeout(() => {\n      this.sumDelay += firstDelay;\n      this.callCreatePromise()\n\n      this.intervalId = setInterval(() => {\n        this.position += 1;\n        this.sumDelay += stepDelay;\n\n        if (this.position > amountValue) {\n          this.clear();\n        } else {\n          this.callCreatePromise();\n        }\n      }, stepDelay);\n    }, firstDelay);\n  }\n  callCreatePromise() {\n    this.createPromise(this.position, this.sumDelay)\n      .then(this.onResolve.bind(this))\n      .catch(this.onReject.bind(this));\n  }\n  createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    });\n  }\n  clear() {\n    clearInterval(this.intervalId);\n    this.intervalId = null;\n    this.sumDelay = 0;\n    this.position = 1;\n  }\n}\n\nconst settings = {\n  formRef: document.querySelector('.form'),\n  onResolve,\n  onReject,\n};\nnew Generator(settings).init();\n\n\nfunction onResolve({ position, delay }) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n};\n\nfunction onReject({ position, delay }) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n};"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$settings","formRef","document","querySelector","position","delay","$parcel$interopDefault","Notify","success","failure","init","this","addListeners","addEventListener","onSubmitForm","bind","event","preventDefault","elements","step","amount","currentTarget","firstDelay","Number","value","stepDelay","amountValue","setTimeout","sumDelay","callCreatePromise","intervalId","setInterval","clear","createPromise","then","onResolve","catch","onReject","Promise","resolve","reject","Math","random","clearInterval","constructor","onResolve1","onReject1"],"version":3,"file":"03-promises.c1f7a72b.js.map"}